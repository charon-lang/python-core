name: Release

on:
  push:
    tags: [ "v[0-9]+.*" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1
        with:
          title: $version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  rust-publish:
    needs: create-release
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo publish

  python-publish-nonlinux:
    needs: rust-publish
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build Python package
        run: maturin build --release --no-sdist --strip --interpreter python${{matrix.python_version}}

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if:  matrix.os != 'windows-latest'
        run: find ./target/wheels/

      # Note: Windows doesn't support glob
      # https://stackoverflow.com/a/52481267/270334
      - name: Install wheels
        if:  matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels wcore_py

      - name: Install wheels
        if:  matrix.os != 'windows-latest'
        run: pip install target/wheels/wcore_py*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/wheels/wcore_py*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: maturin publish --username __token__

  python-publish-linux:
    needs: rust-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Build Python package
        run: docker run --rm -v $(pwd):/io ghcr.io/pyo3/maturin:main build --release --no-sdist --strip

      - name: List wheels
        run: find ./target/wheels/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/wheels/wcore_py*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install maturin
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: PyPi publish
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: maturin publish --username __token__
